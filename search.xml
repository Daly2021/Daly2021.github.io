<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>maven</title>
      <link href="posts/c6e613d8.html"/>
      <url>posts/c6e613d8.html</url>
      
        <content type="html"><![CDATA[<h2 id="Maven"><a href="#Maven" class="headerlink" title="Maven"></a>Maven</h2><p>Maven项目对象模型(POM)，可以通过一小段描述信息来管理项目的构建，报告和文档的软件项目管理工具。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>下载地址：<a href="http://maven.apache.org/download.cgi">http://maven.apache.org/download.cgi</a></p><p><img src="https://cdn.jsdelivr.net/gh/unluckynike/blogimg/images/MavenDownload.png" alt="img"></p><p>下载完，直接解压，copy到一个无中文的目录，并且创建一个新的epository目录，这是本地仓库目录。一下便是解压后的Maven目录结构。</p><p><img src="https://7.dusays.com/2021/03/23/af19e67c05864.png"></p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>1.首先确保电脑JDK已经安装好，进入环境变量的系统变量新建变量名<code>MAVEN_HOME</code>，值为刚才解压的Maven文件的路径。</p><p><img src="https://7.dusays.com/2021/03/23/92c45cd5d93d2.png"></p><p>2.确认后再进入到系统变量的<code>Path</code>新建<code>%MAVEN_HOME%\bin</code></p><p><img src="https://7.dusays.com/2021/03/23/bb1e879c90496.png"></p><p>3.在cmd窗口输入<code>mvn -v</code>显示出版本信息则说明已经配置成功。</p><h2 id="先照着配置"><a href="#先照着配置" class="headerlink" title="先照着配置"></a>先照着配置</h2><h2 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h2><p><strong>修改Repository</strong></p><p>进入<code>conf\settings.xml</code>文件在标签内修改它的默认存储路径。</p><h4 id="（1）配置路径-先建立好这个文件夹"><a href="#（1）配置路径-先建立好这个文件夹" class="headerlink" title="（1）配置路径 先建立好这个文件夹"></a>（1）配置路径 先建立好这个文件夹</h4><pre class="line-numbers language-none"><code class="language-none">&lt;localRepository&gt;D:/repository&lt;/localRepository&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="（2）配置阿里云镜像-要不啥也下不动"><a href="#（2）配置阿里云镜像-要不啥也下不动" class="headerlink" title="（2）配置阿里云镜像 要不啥也下不动"></a>（2）配置阿里云镜像 要不啥也下不动</h4><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirrors</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirror</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">&gt;</span></span>alimaven<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>aliyun maven<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">&gt;</span></span>http://maven.aliyun.com/nexus/content/groups/public/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirrorOf</span><span class="token punctuation">&gt;</span></span>central<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirrorOf</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirror</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirrors</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="（3）配置全局编译jdk版本"><a href="#（3）配置全局编译jdk版本" class="headerlink" title="（3）配置全局编译jdk版本"></a>（3）配置全局编译jdk版本</h4><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profile</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">&gt;</span></span>jdk-1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activation</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activeByDefault</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activeByDefault</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>jdk</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>jdk</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activation</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.source</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.source</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.target</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.target</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.compilerVersion</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.compilerVersion</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profile</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>maven标准目录</p></blockquote><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml">src|--main|--java 源代码目录|--resources 资源目录|--test|--java 测试代码目录|--resources 测试资源目录|--target|--classes 编译后的class文件目录|--test-classes 编译后的测试class文件目录pom.xml Maven工程配置文件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这是大部分Maven工程的目录结构，在这个基础上可以合理地增删目录。 pom.xml的基本要求：</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span><span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span><span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.xinzhi<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Maven生命周期"><a href="#Maven生命周期" class="headerlink" title="Maven生命周期"></a>Maven生命周期</h2><blockquote><p>maven生命周期其实就是描述了一个项目从源代码到部署的整个周期</p></blockquote><p>Maven有三个内置的生命周期：<strong>默认（default），清洁（clean）和站点（site）。</strong></p><ul><li>清洁（clean） 为执行以下工作做必要的清理。就是我们经常做的，删除target文件夹。</li><li> 默认（default） 真正进行项目编译打包等工作的阶段</li><li> 站点（site） 生成项目报告，站点，发布站点</li></ul><blockquote><p>默认（default）的生命周期包括以下阶段（该阶段经过简化，实际上更加复杂）：</p></blockquote><ol><li>验证（validate） - 验证项目是否正确，所有必要的信息可用。</li><li> 编译（compile） - 编译项目的源代码。 </li><li>测试（test） - 使用合适的单元测试框架测试编译的源代码。这些测试不应该要求代码被打包 或部署。 </li><li> 打包（package）- 采用编译的代码，并以其可分配格式（如JAR）进行打包。</li><li>  验证（verify） - 对集成测试的结果执行任何检查，以确保满足质量标准。</li><li>  安装（install） - 将软件包安装到本地存储库中，用作本地其他项目的依赖项。</li><li> 部署（deploy） - 在构建环境中完成，将最终的包复制到远程存储库以与其他开发人员和项目共享 （私服）。</li></ol><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml">mvn install<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>此命令在执行安装之前按顺序（验证（validate），编译（compile），打包（package）等）执行每个 默认生命周期阶段。在这种情况下，您只需要调用最后一个构建阶段来执行，安装（install）。</p><p> 在构建环境中，使用以下调用将工件清理地构建并部署到共享存储库中。</p><pre class="line-numbers language-none"><code class="language-none">mvn clean deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>相同的命令可以在多模块场景（即具有一个或多个子项目的项目）中使用。Maven遍历每个子项目并执 行清洁（clean），然后执行部署（deploy）（包括所有之前的构建阶段步骤）。</p><p> 注意：在我们开发阶段，有一些生命周期的阶段，比如验证（validate）这些，基本很少用到。只要使 用关键的几个基本能满足需求。</p><h2 id="Maven-常用命令"><a href="#Maven-常用命令" class="headerlink" title="Maven 常用命令"></a>Maven 常用命令</h2><p>下面maven比较常见的一些命令。</p><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td>mvn –version</td><td>显示版本信息</td></tr><tr><td>mvn clean</td><td>清理项目生产的临时文件,一般是模块下的target目录</td></tr><tr><td>mvn compile</td><td>编译源代码，一般编译模块下的src/main/java目录</td></tr><tr><td>mvn package</td><td>项目打包工具,会在模块下的target目录生成jar或war等文件</td></tr><tr><td>mvn test</td><td>测试命令,或执行src/test/java/下junit的测试用例</td></tr><tr><td>mvn install</td><td>将打包的jar/war文件复制到你的本地仓库中,供其他模块使用</td></tr><tr><td>mvn deploy</td><td>将打包的文件发布到远程参考,提供其他人员进行下载依赖</td></tr><tr><td>mvn site</td><td>生成项目相关信息的网站</td></tr><tr><td>mvn dependency:tree</td><td>mvn dependency:tree</td></tr><tr><td>mvn archetype:generate</td><td>创建Maven的普通java项目</td></tr><tr><td>mvn tomcat:run</td><td>在tomcat容器中运行web应用</td></tr></tbody></table><h2 id="Maven的版本规范"><a href="#Maven的版本规范" class="headerlink" title="Maven的版本规范"></a>Maven的版本规范</h2><p>所有的软件都用版本 </p><p>Maven使用如下几个要素来定位一个项目，因此它们又称为项目的坐标。</p><blockquote><ul><li><strong>groudId</strong> 团体、组织的标识符。团体标识的约定是，它以创建这个项目的组织名称的逆向域名开 头。一般对应着JAVA的包的结构，例如org.apache。</li><li> <strong>artifactId</strong> 单独项目的唯一标识符。比如我们的tomcat, commons等。不要在artifactId中包含 点号(.)。</li><li> <strong>version</strong> 项目的版本。</li><li> <strong>packaging</strong> 项目的类型，默认是jar，描述了项目打包后的输出。类型为jar的项目产生一个JAR文 件，类型为war的项目产生一个web应用。</li><li> Maven在版本管理时候可以使用几个特殊的字符串 SNAPSHOT，LATEST，RELEASE。比如”1.0- SNAPSHOT”。各个部分的含义和处理逻辑如下说明：</li><li> <strong>SNAPSHOT</strong> 这个版本一般用于开发过程中，表示不稳定的版本。 </li><li><strong>LATEST</strong> 指某个特定构件的最新发布，这个发布可能是一个发布版，也可能是一个snapshot版，具 体看哪个时间最后。 </li><li><strong>RELEASE</strong> 指最后一个发布版。</li></ul></blockquote><h2 id="在idea中配置maven"><a href="#在idea中配置maven" class="headerlink" title="在idea中配置maven"></a>在idea中配置maven</h2><blockquote><p> 把画红线的东西全部配置成自己的。最后一个是仓库，在你的其他盘找一个地方新建repository文 件夹，自己要知道，选中，如果勾选不了就选择都选override。 如果不选择仓库会把jar包下载至C盘的下边目录，不好维护，还占用c盘空间。当然idea和maven可能会 有bug</p></blockquote><pre class="line-numbers language-none"><code class="language-none">C:\Users\zn\.m2\repository<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://7.dusays.com/2021/03/23/b0ec1a73224e2.png"></p><blockquote><p>两处都要配置，一个是当前项目的maven配置，一个是新建项目的maven配置。</p></blockquote><p><img src="https://7.dusays.com/2021/03/23/30d243b137ce6.png"></p>]]></content>
      
      
      <categories>
          
          <category> maven </category>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> maven </tag>
            
            <tag> 项目构建工具 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
